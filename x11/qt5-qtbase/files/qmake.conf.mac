#
# qmake configuration for pkgsrc
#

MAKEFILE_GENERATOR	= UNIX
QMAKE_PLATFORM		= darwin mac macx osx
CONFIG += qt warn_on release link_prl incremental global_init_link_order lib_version_first plugin_no_soname
CONFIG += compile_libtool
QMAKE_INCREMENTAL_STYLE = sublib

QMAKE_COMPILER		= @CC@
QMAKE_COMPILER_DEFINES	= __APPLE__ __GNUC__

QMAKE_CC		= @CC@
QMAKE_LEX		= @LEX@
QMAKE_LEXFLAGS		=
QMAKE_YACC		= @YACC@
QMAKE_YACCFLAGS		= -d
QMAKE_CFLAGS		= @CFLAGS@
QMAKE_CFLAGS_DEPS	= -M
QMAKE_CFLAGS_WARN_ON	= -Wall -W
QMAKE_CFLAGS_WARN_OFF	= -w
QMAKE_CFLAGS_RELEASE	=
QMAKE_CFLAGS_DEBUG	= -g
QMAKE_CFLAGS_SHLIB	= -fPIC
QMAKE_CFLAGS_APP	= -fPIE
QMAKE_CFLAGS_STATIC_LIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_THREAD	= -D_REENTRANT

QMAKE_CXX		= @CXX@
QMAKE_CXXFLAGS		= @CXXFLAGS@ -DQ_TRAILING_DIR_SEP
QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_APP	= $$QMAKE_CFLAGS_APP
QMAKE_CXXFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_STATIC_LIB
QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD
QMAKE_CXXFLAGS_CXX11	= -std=c++0x

QMAKE_OBJECTIVE_CFLAGS		= $$QMAKE_CFLAGS
QMAKE_OBJECTIVE_CFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_OBJECTIVE_CFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_OBJECTIVE_CFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_OBJECTIVE_CFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
QMAKE_OBJECTIVE_CFLAGS_HIDESYMS	= $$QMAKE_CXXFLAGS_HIDESYMS

QMAKE_INCDIR		= @LOCALBASE@/include
QMAKE_LIBDIR		= @LOCALBASE@/lib
#QMAKE_INCDIR_OPENGL     = /System/Library/Frameworks/OpenGL.framework/Headers \
#			  /System/Library/Frameworks/AGL.framework/Headers/

QMAKE_LINK		= @CXX@
QMAKE_LINK_SHLIB	= @CXX@
QMAKE_LINK_C		= @CC@
QMAKE_LINK_C_SHLIB	= @CC@
QMAKE_LINK_SHLIB_CMD    = $$QMAKE_LINK_SHLIB $$QMAKE_LFLAGS_SHLIB $(LFLAGS) $$QMAKE_LFLAGS -o $(TARGETD) $(OBJECTS) $(OBJMOC) $(LIBS)
QMAKE_LFLAGS		= @LDFLAGS@
QMAKE_LFLAGS_RELEASE	= -framework Foundation
eMAKE_LFLAGS_DEBUG	=
QMAKE_LFLAGS_SHLIB	= -single_module -dynamiclib
QMAKE_LFLAGS_PLUGIN	= $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME	= -install_name$${LITERAL_WHITESPACE}
QMAKE_LFLAGS_THREAD	= @PTHREAD_LDFLAGS@
QMAKE_LFLAGS_RPATH	=
QMAKE_LFLAGS_INCREMENTAL= -undefined suppress -flat_namespace
QMAKE_LFLAGS_VERSION	= -current_version$${LITERAL_WHITESPACE}
QMAKE_LFLAGS_COMPAT_VERSION=-compatibility_version$${LITERAL_WHITESPACE}
# -all_load required to make Objective-C categories work in static builds.
QMAKE_LFLAGS_STATIC_LIB	= -all_load

QMAKE_FIX_RPATH		= install_name_tool -id
QMAKE_EXTENSION_SHLIB	= dylib

QMAKE_LIBS		=
QMAKE_LFLAGS_RPATH	=
QMAKE_LIBS_DYNLOAD	=
QMAKE_LIBS_THREAD	=
QMAKE_LIBS_OPENGL	= -framework OpenGL -framework AGL

QMAKE_AR		= @AR@ cq
QMAKE_NM		= nm -P
QMAKE_RANLIB		= @QMAKE_RANLIB@

QMAKE_MOC		= $(QTDIR)/bin/moc
QMAKE_UIC		= $(QTDIR)/bin/uic
QMAKE_UIC3		= $(QTDIR)/bin/uic3
QMAKE_RCC		= $(QTDIR)/bin/rcc

QMAKE_CHK_DIR_EXISTS	= test -d
QMAKE_MKDIR		= @MKDIR@

include(../common/unix.conf)
load(qt_config)
